#!/bin/bash

# Script para configurar token NPM para publica√ß√£o autom√°tica
# Evita ter que fazer login no browser toda vez

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[NPM-SETUP]${NC} $1"
}

success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

echo -e "${BLUE}üîê CONFIGURA√á√ÉO DE TOKEN NPM${NC}"
echo -e "${BLUE}================================${NC}"
echo ""

log "Este script ir√° configurar um token NPM para publica√ß√£o autom√°tica"
echo ""

# 1. Verificar se j√° est√° logado
log "Verificando status atual do NPM..."
if npm whoami &>/dev/null; then
    CURRENT_USER=$(npm whoami)
    success "J√° logado como: $CURRENT_USER"
else
    warning "N√£o est√° logado no NPM"
fi

echo ""
echo -e "${YELLOW}üìã COMO OBTER UM TOKEN NPM:${NC}"
echo ""
echo -e "1. Acesse: ${BLUE}https://www.npmjs.com/settings/tokens${NC}"
echo -e "2. Clique em 'Generate New Token'"
echo -e "3. Escolha o tipo: ${GREEN}Automation${NC} (recomendado) ou ${YELLOW}Granular${NC}"
echo -e "4. Para Automation: selecione ${GREEN}Publish${NC}"
echo -e "5. Para Granular: configure permiss√µes espec√≠ficas"
echo -e "6. Copie o token gerado"
echo ""

# 2. Solicitar o token
echo -e "${YELLOW}üîë CONFIGURAR TOKEN:${NC}"
echo ""
echo -n "Cole seu token NPM aqui (ser√° ocultado): "
read -s NPM_TOKEN
echo ""

if [ -z "$NPM_TOKEN" ]; then
    error "Token n√£o fornecido. Saindo..."
    exit 1
fi

# 3. Configurar o token
log "Configurando token NPM..."

# M√©todo 1: Via npmrc global
echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
success "Token adicionado ao ~/.npmrc"

# M√©todo 2: Via vari√°vel de ambiente (opcional)
ENV_FILE="$HOME/.npmrc_env"
echo "export NPM_TOKEN=$NPM_TOKEN" > "$ENV_FILE"
chmod 600 "$ENV_FILE"
success "Token salvo em $ENV_FILE (para uso como vari√°vel de ambiente)"

# 4. Verificar se funciona
log "Testando autentica√ß√£o..."
if npm whoami &>/dev/null; then
    USER=$(npm whoami)
    success "Autentica√ß√£o funcionando! Usu√°rio: $USER"
else
    error "Falha na autentica√ß√£o. Verifique o token."
    exit 1
fi

# 5. Criar script de publica√ß√£o automatizada
log "Criando script de publica√ß√£o automatizada..."

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PUBLISH_SCRIPT="$SCRIPT_DIR/publish.sh"

cat > "$PUBLISH_SCRIPT" << 'EOF'
#!/bin/bash

# Script de Publica√ß√£o Automatizada para NPM
# Usa token configurado para publicar sem login no browser

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[PUBLISH]${NC} $1"
}

success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

echo -e "${BLUE}üì¶ PUBLICA√á√ÉO AUTOMATIZADA NPM${NC}"
echo -e "${BLUE}===============================${NC}"
echo ""

# Verificar se est√° no diret√≥rio correto
if [ ! -f "package.json" ]; then
    error "package.json n√£o encontrado. Execute no diret√≥rio raiz do projeto."
    exit 1
fi

# Verificar autentica√ß√£o
log "Verificando autentica√ß√£o NPM..."
if ! npm whoami &>/dev/null; then
    error "N√£o autenticado no NPM. Execute: ./scripts/setup-npm-token.sh"
    exit 1
fi

USER=$(npm whoami)
success "Autenticado como: $USER"

# Obter vers√£o atual
CURRENT_VERSION=$(node -p "require('./package.json').version")
log "Vers√£o atual: $CURRENT_VERSION"

# Verificar se h√° mudan√ßas n√£o commitadas
if [ -d ".git" ]; then
    if ! git diff-index --quiet HEAD -- 2>/dev/null; then
        warning "H√° mudan√ßas n√£o commitadas no git"
        echo -n "Continuar mesmo assim? (y/N): "
        read -r response
        if [[ ! "$response" =~ ^[Yy]$ ]]; then
            log "Publica√ß√£o cancelada"
            exit 0
        fi
    fi
fi

# Backup autom√°tico antes da publica√ß√£o
log "Criando backup antes da publica√ß√£o..."
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if [ -f "$SCRIPT_DIR/quick-backup.sh" ]; then
    "$SCRIPT_DIR/quick-backup.sh" "before_npm_publish_$CURRENT_VERSION"
    success "Backup criado"
else
    warning "Script de backup n√£o encontrado"
fi

# Build do projeto
log "Compilando projeto..."
if ! pnpm build; then
    error "Falha na compila√ß√£o"
    exit 1
fi
success "Projeto compilado"

# Verificar arquivos que ser√£o inclu√≠dos
log "Arquivos que ser√£o inclu√≠dos na publica√ß√£o:"
npm pack --dry-run

echo ""
echo -n "Confirma a publica√ß√£o da vers√£o $CURRENT_VERSION? (y/N): "
read -r response
if [[ ! "$response" =~ ^[Yy]$ ]]; then
    log "Publica√ß√£o cancelada pelo usu√°rio"
    exit 0
fi

# Publicar no NPM
log "Publicando no NPM..."
if npm publish; then
    success "‚ú® Pacote $CURRENT_VERSION publicado com sucesso!"
    success "üåê Dispon√≠vel em: https://www.npmjs.com/package/n8n-nodes-hotmart"
    
    # Limpar arquivo .tgz local se foi criado
    rm -f n8n-nodes-hotmart-*.tgz 2>/dev/null
    
    echo ""
    echo -e "${GREEN}üéâ PUBLICA√á√ÉO CONCLU√çDA!${NC}"
    echo -e "   Vers√£o: ${GREEN}$CURRENT_VERSION${NC}"
    echo -e "   Usu√°rio: ${GREEN}$USER${NC}"
    echo -e "   URL: ${BLUE}https://www.npmjs.com/package/n8n-nodes-hotmart${NC}"
    
else
    error "Falha na publica√ß√£o"
    exit 1
fi
EOF

chmod +x "$PUBLISH_SCRIPT"
success "Script de publica√ß√£o criado: $PUBLISH_SCRIPT"

# 6. Criar script de conveni√™ncia
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
CONVENIENCE_SCRIPT="$PROJECT_DIR/publish"

cat > "$CONVENIENCE_SCRIPT" << 'EOF'
#!/bin/bash
# Conveni√™ncia: publica no NPM usando token
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
exec "$SCRIPT_DIR/scripts/publish.sh" "$@"
EOF

chmod +x "$CONVENIENCE_SCRIPT"
success "Script de conveni√™ncia criado: ./publish"

# 7. Seguran√ßa
log "Configurando seguran√ßa..."
chmod 600 ~/.npmrc
chmod 600 "$ENV_FILE" 2>/dev/null
success "Permiss√µes de arquivos configuradas"

echo ""
echo -e "${GREEN}üéâ CONFIGURA√á√ÉO CONCLU√çDA!${NC}"
echo ""
echo -e "${YELLOW}üìã COMO USAR:${NC}"
echo -e "   ${GREEN}./publish${NC}              # Publicar usando script de conveni√™ncia"
echo -e "   ${GREEN}./scripts/publish.sh${NC}   # Script completo de publica√ß√£o"
echo -e "   ${GREEN}npm publish${NC}            # Comando direto (agora funciona automaticamente)"
echo ""
echo -e "${YELLOW}üîê SEGURAN√áA:${NC}"
echo -e "   ‚Ä¢ Token salvo em ~/.npmrc (permiss√µes 600)"
echo -e "   ‚Ä¢ Backup do token em ~/.npmrc_env"
echo -e "   ‚Ä¢ Nunca compartilhe estes arquivos!"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE:${NC}"
echo -e "   ‚Ä¢ O token tem acesso √† sua conta NPM"
echo -e "   ‚Ä¢ Mantenha o arquivo ~/.npmrc seguro"
echo -e "   ‚Ä¢ Para revogar: https://www.npmjs.com/settings/tokens"
echo ""
echo -e "${GREEN}‚úÖ Agora voc√™ pode publicar sem login no browser!${NC}"